{"version":3,"sources":["helpers/helpers.js","components/timer/Timer.js","components/App.js","index.js","components/timer/Timer.module.css"],"names":["pad","value","String","padStart","getTime","time","hours","Math","floor","minutes","seconds","Timer","useState","setTime","running","setRunning","timer$","interval","pipe","map","v","takeWhile","startTimer","stopTimer","pauseTimer","resetTimer","a","useEffect","subscription","subscribe","unsubscribe","btn","document","getElementById","click$","fromEvent","Date","bufferCount","filter","timestamps","className","timerContainer","btnContainer","onClick","timerBtn","disabled","id","timerClockface","App","ReactDOM","render","module","exports"],"mappings":"gQAAMA,EAAM,SAAAC,GACV,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAUpBC,EAPC,SAAAC,GAId,MAAO,CAAEC,MAHKN,EAAIO,KAAKC,MAAMH,EAAI,MAAJ,OAGbI,QAFAT,EAAIO,KAAKC,MAAOH,EAAI,KAAgB,KAE3BK,QADTV,EAAIO,KAAKC,MAAMH,EAAO,O,cCuEzBM,EAvED,WAAO,IAAD,EACMC,mBAAS,GADf,mBACXP,EADW,KACLQ,EADK,OAEYD,oBAAS,GAFrB,mBAEXE,EAFW,KAEFC,EAFE,KAIZC,EAASC,YAAS,KAAMC,KAC5BC,aAAI,SAAAC,GAAC,OAAIA,EAAIf,KACbgB,aAAU,kBAAMP,MAGZQ,EAAa,WACjBP,GAAW,IAGPQ,EAAY,WAChBR,GAAW,GACXF,EAAQ,IAGJW,EAAa,WACjBT,GAAW,IAGPU,EAAU,uCAAG,sBAAAC,EAAA,sEACXH,IADW,OAEjBD,IAFiB,2CAAH,qDA6BhB,OAxBAK,qBAAU,WACR,GAAIb,EAAS,CACX,IAAMc,EAAeZ,EAAOa,UAAUhB,GACtC,OAAO,kBAAMe,EAAaE,kBAG3B,CAAChB,IAEJa,qBAAU,WACR,IAAMI,EAAMC,SAASC,eAAe,WAG9BC,EAASC,YAAUJ,EAAK,SAC3Bb,KACCC,aAAI,kBAAM,IAAIiB,MAAOhC,aACrBiC,YALgB,EAKS,GACzBC,aAAO,SAAAC,GACL,OAAOA,EAAW,IAAK,IAAIH,MAAOhC,UANlB,QASnByB,UAAUL,GACb,OAAO,kBAAMU,EAAOJ,iBACnB,IAGD,sBAAKU,UAAWC,iBAAhB,UACE,sBAAKD,UAAWE,eAAhB,UACE,wBAAQC,QAAS7B,EAAUS,EAAYD,EAAYkB,UAAWI,WAA9D,SACG9B,EAAO,iBAEV,wBAAQ+B,UAAW/B,EAAS0B,UAAWI,WAAUE,GAAG,UAApD,kBAGA,wBAAQH,QAASlB,EAAYoB,UAAW/B,EAAS0B,UAAWI,WAA5D,sBAIF,oBAAGJ,UAAWO,iBAAd,UACG3C,EAAQC,GAAMC,MADjB,IACyBF,EAAQC,GAAMI,QADvC,IACiDL,EAAQC,GAAMK,eC9DtDsC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OAAO,cAAC,EAAD,IAASlB,SAASC,eAAe,U,kBCJjDkB,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,aAAe,4BAA4B,SAAW,wBAAwB,eAAiB,iC","file":"static/js/main.7397157f.chunk.js","sourcesContent":["const pad = value => {\r\n  return String(value).padStart(2, '0');\r\n};\r\n\r\nconst getTime = time => {\r\n  const hours = pad(Math.floor(time / (60 * 60 * 24) / (60 * 60)));\r\n  const minutes = pad(Math.floor((time % (60 * 60)) / 60));\r\n  const seconds = pad(Math.floor(time % 60));\r\n  return { hours, minutes, seconds };\r\n};\r\n\r\nexport default getTime;\r\n","import { useEffect, useState } from 'react';\r\nimport { interval, fromEvent } from 'rxjs';\r\nimport { map, takeWhile, bufferCount, filter } from 'rxjs/operators';\r\n\r\nimport getTime from '../../helpers/helpers';\r\nimport { timerContainer, btnContainer, timerBtn, timerClockface } from './Timer.module.css';\r\n\r\nconst Timer = () => {\r\n  const [time, setTime] = useState(0);\r\n  const [running, setRunning] = useState(false);\r\n\r\n  const timer$ = interval(1000).pipe(\r\n    map(v => v + time),\r\n    takeWhile(() => running),\r\n  );\r\n\r\n  const startTimer = () => {\r\n    setRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setRunning(false);\r\n    setTime(0);\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    setRunning(false);\r\n  };\r\n\r\n  const resetTimer = async () => {\r\n    await stopTimer();\r\n    startTimer();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (running) {\r\n      const subscription = timer$.subscribe(setTime);\r\n      return () => subscription.unsubscribe();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [running]);\r\n\r\n  useEffect(() => {\r\n    const btn = document.getElementById('waitBtn');\r\n    const clickNumber = 2;\r\n    const clickInterval = 300;\r\n    const click$ = fromEvent(btn, 'click')\r\n      .pipe(\r\n        map(() => new Date().getTime()),\r\n        bufferCount(clickNumber, 1),\r\n        filter(timestamps => {\r\n          return timestamps[0] > new Date().getTime() - clickInterval;\r\n        }),\r\n      )\r\n      .subscribe(pauseTimer);\r\n    return () => click$.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={timerContainer}>\r\n      <div className={btnContainer}>\r\n        <button onClick={running ? stopTimer : startTimer} className={timerBtn}>\r\n          {running ? `STOP` : `START`}\r\n        </button>\r\n        <button disabled={!running} className={timerBtn} id=\"waitBtn\">\r\n          WAIT\r\n        </button>\r\n        <button onClick={resetTimer} disabled={!running} className={timerBtn}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n      <p className={timerClockface}>\r\n        {getTime(time).hours}:{getTime(time).minutes}:{getTime(time).seconds}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import Timer from './timer/Timer';\n\nfunction App() {\n  return (\n    <>\n      <Timer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"Timer_timerContainer__1vmxD\",\"btnContainer\":\"Timer_btnContainer__2fjim\",\"timerBtn\":\"Timer_timerBtn__3DThU\",\"timerClockface\":\"Timer_timerClockface__hsq22\"};"],"sourceRoot":""}